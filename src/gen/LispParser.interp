token literal names:
null
'('
null
'\''
null
';'
'#|'
null
't'
'nil'
'+'
'-'
'*'
'/'
null
'<'
'>'
'<='
'>='
'and'
'or'
'not'
'min'
'max'
'incf'
'decf'
'logand'
'logior'
'logxor'
'lognor'
'logeqv'
'evenp'
'cond'
'if'
'when'
'unless'
'case'
'dolist'
'dotimes'
'loop'
'for'
'do'
'error'
'block'
'funcall'
'apply'
'mapcar'
'lambda'
'vector'
'char'
'string'
'make-array'
'defmacro'
'setq'
'defun'
'defstruct'
'print'
'defparameter'
'defvar'
'write'
'format'
'let'
'prog'
'defconstant'
'boundp'
'list'
'cons'
'fixnum'
'bignum'
'ratio'
'float'
'complex'
'sin'
'cos'
'tan'
'asin'
'acos'
'atan'
'sinh'
'cosh'
'tanh'
'exp'
'expt'
'sqrt'
'log'
'conjugate'
'abs'
'gcd'
'lcm'
'isqrt'
'floor'
'ceiling'
null
'push'
'pop'
'aref'
'sort'
'append'
'reverse'
'member'
'subsetp'
'intersection'
'union'
'set-difference'
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
'~a'
'~s'
'~%'
'~&'
'~d'
'~f'
null
null

token symbolic names:
null
OPEN
CLOSE
QUOTE
WS
COMMENT_START
MULTILINE_COMMENT_START
STRING_START
TRUE
FALSE
PLUS
MINUS
MULTIPLY
DIVIDE
EQUAL
LT
GT
LTE
GTE
AND
OR
NOT
MIN
MAX
INCF
DECF
LOGAND
LOGIOR
LOGXOR
LOGNOR
LOGEQV
EVEN
COND
IF
WHEN
UNLESS
CASE
DOLIST
DOTIMES
LOOP
FOR
DO_LOOP
ERROR
BLOCK
FUNCALL
APPLY
MAPCAR
LAMBDA
VECTOR
CHARACTER
STRING
ARRAY
MARCO
SETQ
FUNCTION
STRUCT
PRINT
DEFPARAM
VARIABLE
WRITE
FORMAT
LET
PROGN
CONSTANT
BOUNDP
LIST
CONS
FIXNUM
BIGNUM
RATION
FLOAT
COMPLEX
SIN
COS
TAN
ASIN
ACOS
ATAN
SINH
COSH
TANH
EXP
EXPT
SQRT
LOG
CONJUGATE
ABS
GCD
LCM
ISQRT
FLOOR
CEIL
MODULO
PUSH
POP
ARRAYREF
SORT
APPEND
REVERSE
MEMBERS
SUBSET
INTERSECT
UNION
DIFFERENT
KEYWORD
ID
INTEGERNUMBERDEF
FLOATNUMBERDEF
SCIENCENUMBERDEF
NUMBERDEF
COMPLEXNUMBERDEF
STRINGDEF
MULTILINE_COMMENT
SINGLELINECOMMENT
STRING_CONTENT
STRING_END
FORMAT_STRING_BEGIN
FORMAT_ARG
FORMAT_END
TILDE_A
TILDE_S
TILDE_PERCENT
TILDE_AMPERSAND
TILDE_D
TILDE_F
FORMAT_STRING_CONTENT
FORMAT_STRING_END

rule names:
expression
arithmetic_expression


atn:
[4, 1, 126, 27, 2, 0, 7, 0, 2, 1, 7, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 4, 0, 10, 8, 0, 11, 0, 12, 0, 11, 1, 0, 1, 0, 3, 0, 16, 8, 0, 1, 1, 1, 1, 1, 1, 4, 1, 21, 8, 1, 11, 1, 12, 1, 22, 1, 1, 1, 1, 1, 1, 0, 0, 2, 0, 2, 0, 1, 1, 0, 10, 13, 29, 0, 15, 1, 0, 0, 0, 2, 17, 1, 0, 0, 0, 4, 16, 5, 105, 0, 0, 5, 16, 5, 109, 0, 0, 6, 16, 3, 2, 1, 0, 7, 9, 5, 1, 0, 0, 8, 10, 3, 0, 0, 0, 9, 8, 1, 0, 0, 0, 10, 11, 1, 0, 0, 0, 11, 9, 1, 0, 0, 0, 11, 12, 1, 0, 0, 0, 12, 13, 1, 0, 0, 0, 13, 14, 5, 2, 0, 0, 14, 16, 1, 0, 0, 0, 15, 4, 1, 0, 0, 0, 15, 5, 1, 0, 0, 0, 15, 6, 1, 0, 0, 0, 15, 7, 1, 0, 0, 0, 16, 1, 1, 0, 0, 0, 17, 18, 5, 1, 0, 0, 18, 20, 7, 0, 0, 0, 19, 21, 3, 0, 0, 0, 20, 19, 1, 0, 0, 0, 21, 22, 1, 0, 0, 0, 22, 20, 1, 0, 0, 0, 22, 23, 1, 0, 0, 0, 23, 24, 1, 0, 0, 0, 24, 25, 5, 2, 0, 0, 25, 3, 1, 0, 0, 0, 3, 11, 15, 22]